/**
 * üéØ SEO JSON-LD Generator –¥–ª—è —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π
 * –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç schema.org —Ä–∞–∑–º–µ—Ç–∫—É –¥–ª—è Google Rich Results
 */

class SportsEventSEOGenerator {
    constructor() {
        this.baseURL = 'https://motoshfq.github.io';
        this.organizerData = {
            "@type": "SportsOrganization",
            "name": "–§–µ–¥–µ—Ä–∞—Ü—ñ—è –î–∑—é–¥–æ –£–∫—Ä–∞—ó–Ω–∏",
            "url": this.baseURL + "/"
        };
        this.categories = {};
        this.events = [];
    }

    /**
     * üìä –ó–∞–≥—Ä—É–∂–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
     */
    async loadMetadata() {
        try {
            const response = await fetch('database/docs/index/metadata.json');
            const data = await response.json();
            this.categories = data.categories;
            return true;
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ metadata:', error);
            return false;
        }
    }

    /**
     * üèÜ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–π
     */
    async loadCategoryData(categoryKey) {
        try {
            const category = this.categories[categoryKey];
            if (!category) return null;

            const response = await fetch(`database/docs/index/${category.file}`);
            const data = await response.json();
            
            return {
                key: categoryKey,
                title: category.title,
                ageGroup: category.age_group,
                competitions: data.competitions || []
            };
        } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ${categoryKey}:`, error);
            return null;
        }
    }

    /**
     * üìÖ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–∞—Ç—ã –¥–ª—è –±—É–¥—É—â–∏—Ö —á–µ–º–ø–∏–æ–Ω–∞—Ç–æ–≤
     */
    generateEventDates(categoryKey, year = 2025) {
        const dateMap = {
            'u23': { month: 5, day: 29 }, // –º–∞–π
            'u21': { month: 6, day: 15 }, // –∏—é–Ω—å  
            'u18': { month: 7, day: 12 }, // –∏—é–ª—å
            'u17': { month: 8, day: 18 }, // –∞–≤–≥—É—Å—Ç
            'u16': { month: 9, day: 14 }, // —Å–µ–Ω—Ç—è–±—Ä—å
            'u15': { month: 10, day: 19 } // –æ–∫—Ç—è–±—Ä—å
        };

        const dates = dateMap[categoryKey] || { month: 5, day: 15 };
        const startDate = new Date(year, dates.month - 1, dates.day, 10, 0, 0);
        const endDate = new Date(year, dates.month - 1, dates.day + 1, 18, 0, 0);

        return {
            startDate: this.formatISODate(startDate),
            endDate: this.formatISODate(endDate)
        };
    }

    /**
     * üåç –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ª–æ–∫–∞—Ü–∏–∏ –¥–ª—è —á–µ–º–ø–∏–æ–Ω–∞—Ç–æ–≤
     */
    generateEventLocation(categoryKey) {
        const locationMap = {
            'u23': { city: '–õ—å–≤—ñ–≤', region: '–õ—å–≤—ñ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å', venue: '–°–ø–æ—Ä—Ç–∏–≤–Ω–∏–π –∫–æ–º–ø–ª–µ–∫—Å —É –õ—å–≤–æ–≤—ñ' },
            'u21': { city: '–ö–∏—ó–≤', region: '–ö–∏—ó–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å', venue: '–°–ø–æ—Ä—Ç–∏–≤–Ω–∏–π –∫–æ–º–ø–ª–µ–∫—Å —É –ö–∏—î–≤—ñ' },
            'u18': { city: '–•–∞—Ä–∫—ñ–≤', region: '–•–∞—Ä–∫—ñ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å', venue: '–°–ø–æ—Ä—Ç–∏–≤–Ω–∏–π –∫–æ–º–ø–ª–µ–∫—Å —É –•–∞—Ä–∫–æ–≤—ñ' },
            'u17': { city: '–î–Ω—ñ–ø—Ä–æ', region: '–î–Ω—ñ–ø—Ä–æ–ø–µ—Ç—Ä–æ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å', venue: '–°–ø–æ—Ä—Ç–∏–≤–Ω–∏–π –∫–æ–º–ø–ª–µ–∫—Å —É –î–Ω—ñ–ø—Ä—ñ' },
            'u16': { city: '–û–¥–µ—Å–∞', region: '–û–¥–µ—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å', venue: '–°–ø–æ—Ä—Ç–∏–≤–Ω–∏–π –∫–æ–º–ø–ª–µ–∫—Å –≤ –û–¥–µ—Å—ñ' },
            'u15': { city: '–ó–∞–ø–æ—Ä—ñ–∂–∂—è', region: '–ó–∞–ø–æ—Ä—ñ–∑—å–∫–∞ –æ–±–ª–∞—Å—Ç—å', venue: '–°–ø–æ—Ä—Ç–∏–≤–Ω–∏–π –∫–æ–º–ø–ª–µ–∫—Å —É –ó–∞–ø–æ—Ä—ñ–∂–∂—ñ' }
        };

        const location = locationMap[categoryKey] || locationMap['u23'];
        
        return {
            "@type": "Place",
            "name": location.venue,
            "address": {
                "@type": "PostalAddress",
                "addressLocality": location.city,
                "addressRegion": location.region,
                "addressCountry": "UA"
            }
        };
    }

    /**
     * üé® –°–æ–∑–¥–∞–µ—Ç SportsEvent –æ–±—ä–µ–∫—Ç –¥–ª—è JSON-LD
     */
    createSportsEvent(categoryData, position) {
        const { key, title, ageGroup } = categoryData;
        const dates = this.generateEventDates(key);
        const location = this.generateEventLocation(key);

        return {
            "@type": "ListItem",
            "position": position,
            "item": {
                "@type": "SportsEvent",
                "name": title,
                "sport": "Judo",
                "startDate": dates.startDate,
                "endDate": dates.endDate,
                "eventStatus": "https://schema.org/EventScheduled",
                "eventAttendanceMode": "https://schema.org/OfflineEventAttendanceMode",
                "location": location,
                "description": `–ß–µ–º–ø—ñ–æ–Ω–∞—Ç –£–∫—Ä–∞—ó–Ω–∏ –∑ –¥–∑—é–¥–æ ${ageGroup}. –û—Ñ—ñ—Ü—ñ–π–Ω—ñ –∑–º–∞–≥–∞–Ω–Ω—è –∑ –≤–∏—è–≤–ª–µ–Ω–Ω—è –∫—Ä–∞—â–∏—Ö —Å–ø–æ—Ä—Ç—Å–º–µ–Ω—ñ–≤ –£–∫—Ä–∞—ó–Ω–∏.`,
                "image": `${this.baseURL}/assets/judo-${key}-championship.jpg`,
                "organizer": this.organizerData,
                "performer": {
                    "@type": "SportsTeam",
                    "name": `–ó–±—ñ—Ä–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –£–∫—Ä–∞—ó–Ω–∏ –∑ –¥–∑—é–¥–æ ${key.toUpperCase()}`
                },
                "offers": {
                    "@type": "Offer",
                    "url": `${this.baseURL}/documents.html#${key}`,
                    "price": "0",
                    "priceCurrency": "UAH",
                    "availability": "https://schema.org/InStock"
                }
            }
        };
    }

    /**
     * üïê –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞—Ç—É –≤ ISO 8601 —Å —É–∫—Ä–∞–∏–Ω—Å–∫–æ–π –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∑–æ–Ω–æ–π
     */
    formatISODate(date) {
        const year = date.getFullYear();
        const month = String(date.getMonth() + 1).padStart(2, '0');
        const day = String(date.getDate()).padStart(2, '0');
        const hour = String(date.getHours()).padStart(2, '0');
        const minute = String(date.getMinutes()).padStart(2, '0');
        const second = String(date.getSeconds()).padStart(2, '0');
        
        return `${year}-${month}-${day}T${hour}:${minute}:${second}+03:00`;
    }

    /**
     * üîó –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—É—é JSON-LD —Å—Ç—Ä—É–∫—Ç—É—Ä—É
     */
    async generateJSONLD() {
        console.log('üöÄ –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ JSON-LD...');
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
        const metadataLoaded = await this.loadMetadata();
        if (!metadataLoaded) {
            console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ');
            return null;
        }

        // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        const categoryKeys = Object.keys(this.categories);
        const sportsEvents = [];
        let position = 1;

        for (const key of categoryKeys) {
            const categoryData = await this.loadCategoryData(key);
            if (categoryData) {
                const sportsEvent = this.createSportsEvent(categoryData, position);
                sportsEvents.push(sportsEvent);
                position++;
                console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ —Å–æ–±—ã—Ç–∏–µ –¥–ª—è ${key}: ${categoryData.title}`);
            }
        }

        // –û—Å–Ω–æ–≤–Ω–∞—è JSON-LD —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
        const jsonLD = {
            "@context": "https://schema.org",
            "@type": "WebPage",
            "name": "–î–æ–∫—É–º–µ–Ω—Ç–∏ –§–î–£ - –ü—Ä–æ—Ç–æ–∫–æ–ª–∏ —á–µ–º–ø—ñ–æ–Ω–∞—Ç—ñ–≤ –£–∫—Ä–∞—ó–Ω–∏ –∑ –¥–∑—é–¥–æ",
            "description": "–û—Ñ—ñ—Ü—ñ–π–Ω—ñ –ø—Ä–æ—Ç–æ–∫–æ–ª–∏ —Ç–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∏ –§–µ–¥–µ—Ä–∞—Ü—ñ—ó –î–∑—é–¥–æ –£–∫—Ä–∞—ó–Ω–∏. –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ —á–µ–º–ø—ñ–æ–Ω–∞—Ç—ñ–≤ –≤—Å—ñ—Ö –≤—ñ–∫–æ–≤–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π.",
            "url": `${this.baseURL}/documents.html`,
            "inLanguage": "uk-UA",
            "about": {
                "@type": "SportsOrganization",
                "name": "–§–µ–¥–µ—Ä–∞—Ü—ñ—è –î–∑—é–¥–æ –£–∫—Ä–∞—ó–Ω–∏"
            },
            "breadcrumb": {
                "@type": "BreadcrumbList",
                "itemListElement": [
                    {
                        "@type": "ListItem",
                        "position": 1,
                        "name": "–ì–æ–ª–æ–≤–Ω–∞",
                        "item": this.baseURL
                    },
                    {
                        "@type": "ListItem",
                        "position": 2,
                        "name": "–î–æ–∫—É–º–µ–Ω—Ç–∏",
                        "item": `${this.baseURL}/documents.html`
                    }
                ]
            },
            "mainEntity": {
                "@type": "ItemList",
                "name": "–ü—Ä–æ—Ç–æ–∫–æ–ª–∏ —á–µ–º–ø—ñ–æ–Ω–∞—Ç—ñ–≤ –£–∫—Ä–∞—ó–Ω–∏ –∑ –¥–∑—é–¥–æ",
                "numberOfItems": sportsEvents.length,
                "itemListElement": sportsEvents
            }
        };

        console.log(`üéØ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –°–æ–∑–¥–∞–Ω–æ ${sportsEvents.length} —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π`);
        return jsonLD;
    }

    /**
     * üìã –í–Ω–µ–¥—Ä—è–µ—Ç JSON-LD –≤ —Å—Ç—Ä–∞–Ω–∏—Ü—É
     */
    async injectJSONLD() {
        const jsonLD = await this.generateJSONLD();
        if (!jsonLD) return false;

        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π JSON-LD –µ—Å–ª–∏ –µ—Å—Ç—å
        const existingScript = document.getElementById('sports-events-jsonld');
        if (existingScript) {
            existingScript.remove();
        }

        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π script —Ç–µ–≥
        const script = document.createElement('script');
        script.id = 'sports-events-jsonld';
        script.type = 'application/ld+json';
        script.textContent = JSON.stringify(jsonLD, null, 2);

        // –î–æ–±–∞–≤–ª—è–µ–º –≤ head
        document.head.appendChild(script);
        
        console.log('üéâ JSON-LD —É—Å–ø–µ—à–Ω–æ –≤–Ω–µ–¥—Ä–µ–Ω –≤ —Å—Ç—Ä–∞–Ω–∏—Ü—É!');
        return true;
    }
}

// üöÄ –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
window.SportsEventSEOGenerator = SportsEventSEOGenerator;

// üéØ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', async () => {
    if (window.location.pathname.includes('documents.html')) {
        console.log('üìÑ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –∑–∞–ø—É—Å–∫ SEO –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞...');
        const seoGenerator = new SportsEventSEOGenerator();
        await seoGenerator.injectJSONLD();
    }
}); 